name: GitHub_SubnetIDs_parsing

on:
  workflow_dispatch:
    inputs:
      SUBNET_IDs_LAMBDA:
        description: SUBNET IDs for Lambda
        type: string
        required: true

      SUBNET_IDs_RDS:
        description: SUBNET IDs for RDS
        type: string
        required: true

      ACCESS_KEY_ID:
        description: Acces key ID
        type: string
        required: true
      
      SECRET_ACCESS_KEY_ID:
        description: Secret Acces key ID
        type: string
        required: true
env:
  SUBNET_ID_LAMBDA: ${{ inputs.SUBNET_IDs_LAMBDA }}
  SUBNET_ID_RDS: ${{ inputs.SUBNET_IDs_RDS }}
  AWS_ACCESS_KEY_INPUT: ${{inputs.ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY_INPUT: ${{inputs.SECRET_ACCESS_KEY_ID}}

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Parse subnet IDs
        id: parse_subnets
        run: |
          echo "SUBNET_LAMBDA=[\\\"$(echo ${{ env.SUBNET_ID_LAMBDA }} | sed 's/,/\\",\\"/g')\\\"]" >> $GITHUB_OUTPUT
          echo "SUBNET_RDS=[\\\"$(echo ${{ env.SUBNET_ID_RDS }} | sed 's/,/\\",\\"/g')\\\"]" >> $GITHUB_OUTPUT
        
      - name: Printing the parsed value for Lambda
        id: parsed-printing-lambda
        run: |
          echo PARSED-SUBNETS=${{ steps.parse_subnets.outputs.SUBNET_LAMBDA }}

      - name: Printing the parsed value for RDS
        id: parsed-printing-rds
        run: |
          echo PARSED-SUBNETS=${{ steps.parse_subnets.outputs.SUBNET_RDS }}

      - name: Configure AWS Credentials for DEV ENV
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_INPUT }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY_INPUT }}
          aws-region: "ap-south-1"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.0

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          download_external_modules: true
          output_format: sarif
          output_file_path: console,checkov_report/results.sarif
          github_pat: ${{ secrets.TOKEN_PAT }}
        
      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform
        run: | 
          terraform plan -var-file="dev.tfvars" \
          -var="lambda_subnet_ids=${{ steps.parse_subnets.outputs.SUBNET_LAMBDA }}" \
          -var="rds_subnet_ids=${{ steps.parse_subnets.outputs.SUBNET_RDS }}"

      - name: Extract REST API URL
        run: |
          rest_api_url=$(jq -r '.["rest-api-invoke-url"]' out2.json)
          echo "REST_API_URL=$rest_api_url" >> $GITHUB_ENV

      - name: print URL
        run: echo $REST_API_URL

      - name: Microsoft Teams Webhook Message Bot
        uses: myusufcse/microsoft-teams-message-bot@main
        with:
          webhook: ${{ secrets.MS_WEBHOOK_URL }}
          message: |
                  The infra has been deployed
                  
          
          

